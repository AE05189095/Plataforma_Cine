import { useState, useEffect, ChangeEvent, FormEvent } from 'react'; 
interface Reserva { _id: string; cliente: string; estado: string; fecha: string; } 
interface Filtros { estado: string; fecha: string; cliente: string; } 
export default function ReservasPanel() { 
  const [reservas, setReservas] = useState<Reserva[]>([]); const [filtros, setFiltros] = useState<Filtros>({ estado: '', fecha: '', cliente: '', }); useEffect(() => { fetchReservas(); }, []); const fetchReservas = async () => { try { const query = new URLSearchParams(filtros).toString(); const res = await fetch(`/api/reservas?${query}`); if (!res.ok) throw new Error('Error al obtener reservas'); const data = await res.json(); setReservas(data); } catch (err) { console.error(err); } }; const handleChange = ( e: ChangeEvent<HTMLInputElement | HTMLSelectElement> ) => { setFiltros({ ...filtros, [e.target.name]: e.target.value }); }; const handleFilter = (e: FormEvent) => { e.preventDefault(); fetchReservas(); }; return ( <div style={{ padding: '1rem' }}> <h2>Panel de Reservas</h2> <form onSubmit={handleFilter} style={{ marginBottom: '1rem' }}> <input type="text" name="cliente" placeholder="Cliente" onChange={handleChange} style={{ marginRight: '0.5rem' }} /> <input type="date" name="fecha" onChange={handleChange} style={{ marginRight: '0.5rem' }} /> <select name="estado" onChange={handleChange} style={{ marginRight: '0.5rem' }} > <option value="">Todos</option> <option value="pendiente">Pendiente</option> <option value="confirmada">Confirmada</option> <option value="cancelada">Cancelada</option> </select> <button type="submit">Filtrar</button> </form> <ul> {reservas.length > 0 ? ( reservas.map((r) => ( <li key={r._id}> {r.cliente} - {r.estado} -{' '} {new Date(r.fecha).toLocaleDateString()} </li> )) ) : ( <li>No hay reservas encontradas.</li> )} </ul> </div> ); } 
