const mongoose = require("mongoose");
const Movie = require("../models/Movie");
const Showtime = require("../models/Showtime");

// üìç Listar todas las pel√≠culas con funciones
exports.list = async (req, res) => {
  try {
    const movies = await Movie.find()
      .populate({
        path: "showtimes",
        model: "Showtime",
        populate: { path: "hall", select: "name" },
      })
      .lean();

    const baseUrl = `${req.protocol}://${req.get("host")}`;

    // üß© Corregimos im√°genes y g√©neros antes de enviar
    const formattedMovies = movies.map((movie) => {
      let imageUrl = "";

      // üñºÔ∏è Si tiene campo "image" v√°lido
      if (movie.image && movie.image.trim() !== "") {
        imageUrl = movie.image;
      }
      // üñºÔ∏è Si tiene array "images"
      else if (movie.images && movie.images.length > 0) {
        imageUrl = movie.images[0];
      }

      // üîß Limpiar rutas y convertir a URL completa
      if (imageUrl && !imageUrl.startsWith("http")) {
        imageUrl = `${baseUrl}/images/${imageUrl.replace(/^\/?images\//, "")}`;
      }

      // üé≠ Obtener g√©nero
      let genre = movie.genre || (Array.isArray(movie.genres) ? movie.genres[0] : "");

      return {
        ...movie,
        image: imageUrl || `${baseUrl}/images/default-poster.jpg`,
        genre,
      };
    });

    res.json(formattedMovies);
  } catch (error) {
    console.error("‚ùå Error al listar pel√≠culas:", error);
    res.status(500).json({ message: "Error al obtener pel√≠culas." });
  }
};

// üé¨ Obtener una pel√≠cula espec√≠fica por ID o slug
exports.getById = async (req, res) => {
  try {
    const movieIdOrSlug = req.params.id;

    const movie = await Movie.findOne({
      $or: [
        { _id: mongoose.isValidObjectId(movieIdOrSlug) ? movieIdOrSlug : null },
        { slug: movieIdOrSlug },
      ],
    })
      .populate({
        path: "showtimes",
        model: "Showtime",
        populate: { path: "hall", select: "name" },
      })
      .lean();

    if (!movie) {
      return res.status(404).json({ message: "Pel√≠cula no encontrada." });
    }

    const baseUrl = `${req.protocol}://${req.get("host")}`;

    // üñºÔ∏è Procesar imagen
    let imageUrl = "";
    if (movie.image && movie.image.trim() !== "") {
      imageUrl = movie.image;
    } else if (movie.images && movie.images.length > 0) {
      imageUrl = movie.images[0];
    }

    if (imageUrl && !imageUrl.startsWith("http")) {
      imageUrl = `${baseUrl}/images/${imageUrl.replace(/^\/?images\//, "")}`;
    }

    const genre = movie.genre || (Array.isArray(movie.genres) ? movie.genres[0] : "");

    res.json({ ...movie, image: imageUrl || `${baseUrl}/images/default-poster.jpg`, genre });
  } catch (error) {
    console.error("‚ùå Error al obtener pel√≠cula:", error);
    res.status(500).json({ message: "Error interno del servidor." });
  }
};

// ‚ûï Crear pel√≠cula
exports.create = async (req, res) => {
  try {
    if (req.body.image && req.body.image.includes("/images/")) {
      req.body.image = req.body.image.replace(/^\/?images\//, "");
    }

    const movie = new Movie(req.body);
    await movie.save();
    res.status(201).json(movie);
  } catch (error) {
    console.error("‚ùå Error al crear pel√≠cula:", error);
    res.status(500).json({ message: "Error al crear pel√≠cula." });
  }
};

// ‚úèÔ∏è Actualizar pel√≠cula
exports.update = async (req, res) => {
  try {
    if (req.body.image && req.body.image.includes("/images/")) {
      req.body.image = req.body.image.replace(/^\/?images\//, "");
    }

    const movie = await Movie.findByIdAndUpdate(req.params.id, req.body, { new: true });
    if (!movie) return res.status(404).json({ message: "Pel√≠cula no encontrada." });

    res.json(movie);
  } catch (error) {
    console.error("‚ùå Error al actualizar pel√≠cula:", error);
    res.status(500).json({ message: "Error al actualizar pel√≠cula." });
  }
};

// ‚ùå Eliminar pel√≠cula
exports.remove = async (req, res) => {
  try {
    const movie = await Movie.findByIdAndDelete(req.params.id);
    if (!movie) return res.status(404).json({ message: "Pel√≠cula no encontrada." });

    res.json({ message: "Pel√≠cula eliminada correctamente." });
  } catch (error) {
    console.error("‚ùå Error al eliminar pel√≠cula:", error);
    res.status(500).json({ message: "Error al eliminar pel√≠cula." });
  }
};
